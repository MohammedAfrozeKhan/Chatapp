migrationBuilder.CreateTable(
name: "Values",
columns: table => new
{
	Id = table.Column<int>(nullable: false)
	     .Annotation("Sqlite:Autoincrement", true),
	Name = table.Column<string>(nullable : true)
},
constraints: table =>
{
	table.PrimaryKey("PK_Value",x = x.Id);
});

----------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

using Microsoft.AspNetCore.HttpsPolicy;
using Microsoft.AspNetCore.Mvc;

using Microsoft.Extensions.Logging;

----------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;

namespace ChatApp.API.Controllers
{
	[Route("api/[controller]")]
	[ApiController]

public class ValuesController : ControllerBase
{
	[HttpGet]
	public ActionResult<IEnumerable<string>> Get()
{
	return new string[] {"value1", "value2"};
}
	[HttpGet("{id}")]
	public ActionResult<string> Get(int id)
{
	return "value";
}
	[HttpPost]
	public void post([FromBody] string value)
{
}
	[HttpPut]
	public void Put(int id,[FromBody] string value)
{
}

	[HttpDelete] ("{id}")
	public void Delete(int id)
{
}
}
}
----------------------------------------------------

	[HttpGet]
	public IActionResult GetValues()
{
	var values = _context.Values.ToList();
	return Ok(values);
}

	[HttpGet("{id}")]
	public IActionResult GetValue(int id)
{
	var value = _context.Values.FirstOrDefault(x => x.Id == id);
	return Ok(value);
}

----------------------------------------------------
	
	[HttpGet]
	public async Task<IActionResult> GetValues()
{
	var values = await_context.Values.ToListAsync();
	return Ok(values);
}

	[HttpGet("{id}")]
	public async Task<IActionResult> GetValue(int id)
{
	var value = await_context.Values.FirstOrDefaultAsync(x => x.Id == id);
	return Ok(value);
}